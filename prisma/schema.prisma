// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

// Models
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(user)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)

  // An user can have multiple articles
  Article Article[]
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // An article belongs to an user
  authorId Int
  author   User @relation(fields: [authorId], references: [id])

  // An article can have multiple categories
  ArticleCategory ArticleCategory[]
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique

  // A category can have multiple articles
  ArticleCategory ArticleCategory[]
}

// Many-to-many relation between Article and Category requires a join table
model ArticleCategory {
  articleId Int
  article   Article @relation(fields: [articleId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([articleId, categoryId])
}
